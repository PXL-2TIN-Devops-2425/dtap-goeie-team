pipeline {
    agent any
  
    stages {
        stage ('cleanup'){
            steps{
                cleanWs()
            }
        }
        
        stage('fetch app code') {
            steps {
                // Get some code from a GitHub repository
                git branch: 'main', url: 'https://github.com/PXL-2TIN-DevOps-Resources/calculator-app-finished.git'
            }
        }
        stage('Install dependencies'){
            steps{
                script {
                    env.NODEJS_HOME = "${tool 'testenvnode'}"
                    env.PATH="${env.NODEJS_HOME}/bin:${env.PATH}"
                    sh 'npm install'
                }
            }
        }
        stage('Build artifact'){
            steps{
                script {
                    sh "docker build -t calculator-app:latest ."
                }
            }
        }
        stage('Push artifact') {
            agent any
                steps {
                    withCredentials([usernamePassword(credentialsId: 'dockerHub', passwordVariable: 'dockerHubPassword', usernameVariable: 'dockerHubUser')]) {
                        sh "docker login -u ${env.dockerHubUser} -p ${env.dockerHubPassword}"
                        sh 'docker push shanem/spring-petclinic:latest'
                }
            }
        }
        stage('Deployment') {
            steps {
                script {
                    def fullImageName = "lucadanijspxl/calculator-app:latest"
                    sh "docker rm -f calculator-app || true" 
                    sh "docker run -d -p 3000:3000 --name calculator-app ${fullImageName}" 
                }
            }
        }        
    }
}